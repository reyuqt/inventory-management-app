version: '3.8'

services:
  db:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: inventory_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d inventory_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
    container_name: backend
    restart: always
    env_file:
      - ./backend/.env.docker
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: always
    env_file:
      - ./frontend/.env
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Nginx config
    ports:
      - "80:80" # Expose Nginx on port 80
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge